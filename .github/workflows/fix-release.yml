name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version to fix"
        required: true
        type: number

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm ci
      - run: npm run lint

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm ci
      - run: npm run test

  fix_release:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
      IMAGE_NAME: app
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_SA_KEY }}

      - name: Build Docker Image
        run: |
          RELEASE_VERSION=${{ github.event.inputs.release_version }}
          FIX_RUN_NUMBER=${{ github.run_number }}
          IMAGE_BASE_NAME="cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}"
          docker build -t "$IMAGE_BASE_NAME:${RELEASE_VERSION}_fix$FIX_RUN_NUMBER" -t "$IMAGE_BASE_NAME:${RELEASE_VERSION}_latest" .

      - name: Push Docker Image
        run: |
          RELEASE_VERSION=${{ github.event.inputs.release_version }}
          FIX_RUN_NUMBER=${{ github.run_number }}
          IMAGE_BASE_NAME="cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}"
          docker push "$IMAGE_BASE_NAME:${RELEASE_VERSION}_fix$FIX_RUN_NUMBER"
          docker push "$IMAGE_BASE_NAME:${RELEASE_VERSION}_latest"

      - name: Get latest relevant tag
        id: get_latest_tag
        run: |
          LAST_TAG=$(git tag -l "v${{ github.event.inputs.release_version }}*" | sort -V | tail -n 1)
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Get commits since last relevant tag
        id: get_commits
        run: |
          COMMITS=$(git log --pretty=format:"* %h %s (%an)" ${{ steps.get_latest_tag.outputs.LAST_TAG }}..HEAD)
          COMMIT_LIST=$(echo "$COMMITS" | sed 's/^/* /')
          echo "COMMIT_LIST<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          RELEASE_VERSION=${{ github.event.inputs.release_version }}
          FIX_RUN_NUMBER=${{ github.run_number }}
          git tag -a v$RELEASE_VERSION_fix$FIX_RUN_NUMBER -m "Fix Release v$RELEASE_VERSION (Run $FIX_RUN_NUMBER)"
          git push origin v$RELEASE_VERSION_fix$FIX_RUN_NUMBER

      - name: Find Release Issue and add comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_VERSION=${{ github.event.inputs.release_version }}
          FIX_RUN_NUMBER=${{ github.run_number }}
          FIX_AUTHOR=${{ github.actor }}
          FIX_DATE=$(date +'%Y-%m-%d %H:%M:%S %Z')
          DOCKER_IMAGE_URL="cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:$RELEASE_VERSION_fix$FIX_RUN_NUMBER"

          ISSUE_NUMBER=$(gh issue list --search "Release v$RELEASE_VERSION" --json number --jq '.[0].number')

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "No issue found for Release v$RELEASE_VERSION"
          else
            gh issue comment $ISSUE_NUMBER --body "\
            ### Информация о фикс-релизе (v$RELEASE_VERSION_fix$FIX_RUN_NUMBER)

            - **Дата фикса:** $FIX_DATE
            - **Автор фикса:** $FIX_AUTHOR
            - **Образ Docker:** [$DOCKER_IMAGE_URL]($DOCKER_IMAGE_URL)

            ### Коммиты в этом фикс-релизе:
            ${{ steps.get_commits.outputs.COMMIT_LIST }}
            "
          fi
